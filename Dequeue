public Node dequeue() {
    // If the queue is empty, return null
    if(length == 0) return null;
    // Save a reference to the first node
    Node temp = first;
    // If there is only one node in the queue, set both first and last to null
    if(length == 1) {
        first = null;
        last = null;
    } else {
        // Otherwise, set the first node to be the next node in the queue
        first = first.next;
        // Set the next pointer of the removed node to null
        temp.next = null;
    }
    // Decrease the length of the queue by 1
    length--;
    // Return the removed node
    return temp;
}
