import java.util.Arrays;

public class MergeSort {
    public static int[] merge(int arr1[], int arr2[]) {
        int[] combined = new int[arr1.length + arr2.length];
        int index = 0;
        int i = 0;
        int j = 0;
        while (i < arr1.length && j < arr2.length) {
            if (arr1[i] < arr2[j]) {
                combined[index] = arr1[i];
                index++;
                i++;
            } else {
                combined[index] = arr2[j];
                index++;
                j++;

            }
        }
        while (i < arr1.length) {
            combined[index] = arr1[i];
            index++;
            i++;
        }
        while (j < arr2.length) {
            combined[index] = arr2[j];
            index++;
            j++;
        }
        return combined;
    }


    public static int[] mergesort(int[] arr) {
        if (arr.length == 1) return arr;
        int mid = arr.length / 2;
        int left[] = mergesort(Arrays.copyOfRange(arr, 0, mid));
        int right[] = mergesort(Arrays.copyOfRange(arr, mid, arr.length));
        return merge(left, right);

    }
}









///////////////////////////////////////







import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
         MergeSort ms=new MergeSort();
         int a1[]={1,2,3,4};
         int a2[]={5,6,7,8};
        System.out.println(Arrays.toString(ms.merge(a1,a2)));


    }
}




